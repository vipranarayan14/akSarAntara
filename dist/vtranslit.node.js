!function(n,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.vTranslit=t():n.vTranslit=t()}(window,(function(){return function(n){var t={};function r(e){if(t[e])return t[e].exports;var o=t[e]={i:e,l:!1,exports:{}};return n[e].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=n,r.c=t,r.d=function(n,t,e){r.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:e})},r.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},r.t=function(n,t){if(1&t&&(n=r(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var e=Object.create(null);if(r.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var o in n)r.d(e,o,function(t){return n[t]}.bind(null,o));return e},r.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return r.d(t,"a",t),t},r.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},r.p="",r(r.s=1)}([function(n,t,r){var e;"undefined"!=typeof self&&self,e=function(){return function(n){var t={};function r(e){if(t[e])return t[e].exports;var o=t[e]={i:e,l:!1,exports:{}};return n[e].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=n,r.c=t,r.d=function(n,t,e){r.o(n,t)||Object.defineProperty(n,t,{configurable:!1,enumerable:!0,get:e})},r.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return r.d(t,"a",t),t},r.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},r.p="",r(r.s=0)}([function(n,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var e=function(n,t,r,e){return n===t||e===r.length-1},o=function(n,t){return t>-1?{foundIndex:t,token:n[t]}:{foundIndex:0,token:n[0]}},a=function(n){return"unknown"!==n.type};t.vTokenize=function(n,t,r){for(var u=n.slice(0,n.length),i=t,c=[],s=0,f="",l=[],d=[],h=0,p=u.length;h<p;h+=1){s+=1;var v=r(f+=u[h]);if(l.push(v),d.push(a(v)),e(s,i,u,h)){var y=d.lastIndexOf(!0),m=o(l,y);y=m.foundIndex,c.push(m.token),h-=s-1-y,s=0,f="",l=[],d=[]}}return c}}])},n.exports=e()},function(n,t,r){"use strict";r.r(t),r.d(t,"vTranslit",(function(){return E}));var e=function(n){return Array.isArray(n)?n[0]:n},o=function(n,t,r,e,o,a){n&&(e[n]={aksharaIndex:"".concat(o,"#").concat(t),alternateIndex:r,char:n,type:o},a.push(n.length))},a=function(n,t,r,o,a,u){var i={char:{},type:a};if(u){var c=r.data[u][t];i.char[u]=e(c)}i.char[a]=e(n),o["".concat(a,"#").concat(t)]=i},u=function(n,t,r){var e={};return"roman"===n.about.type&&"consonants"===t||n.data[t].forEach((function(n,a){Array.isArray(n)?n.forEach((function(n,u){o(n,a,u,e,t,r)})):o(n,a,0,e,t,r)})),e},i=function(n,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",e={};return n.data[t].forEach((function(o,u){a(o,u,n,e,t,r)})),e},c=function(n){var t=[];return{fromSchemeTree:Object.assign({},u(n,"deadConsonants",t),u(n,"consonants",t),u(n,"vowels",t),u(n,"vowelMarks",t),u(n,"ayogavaha",t),u(n,"symbols",t)),maxTokenLength:Math.max.apply(Math,t)}},s=function(n){var t={};return t=Object.assign({},t,i(n,"deadConsonants","consonants"),i(n,"consonants","deadConsonants"),i(n,"vowels","vowelMarks"),i(n,"vowelMarks","vowels"),i(n,"ayogavaha"),i(n,"symbols"))},f={" ":{type:"pause"},_:{type:"skip"}},l={"#{":{type:"marker-open-translit-mode"},"@":{type:"marker-translit-scheme"},"}#":{type:"marker-close-translit-mode"}},d=function(n,t){return function(r){var e,o,a=function(n){return n.translitMode>0?Object.assign({},f,l):f}(t),u=(o=a[e=r])?Object.assign({},o,{char:e}):null,i=n[r];return u||(i||{char:r,type:"unknown"})}},h=function(n,t,r){for(var e=n.slice(),o=[],a=0;a<e.length;a+=1){var u=e[a],i=a<e.length-1?e[a+1]:{type:"strEnd"},c=a>0?e[a-1]:{type:"strStart"},s=u.type;"brahmic"===r?"deadConsonants"===s&&"vowelMarks"===i.type?s="consonants":"vowels"===s&&"deadConsonants"===c.type?s="vowelMarks":"vowelMarks"===s&&"deadConsonants"!==c.type&&(s="vowels"):"roman"===r&&"consonants"===s&&"vowelMarks"===i.type&&(s="deadConsonants"),o.push(s)}return{processedTokens:e,tokensType:o}},p=function(n,t,r,e){var o=[],a=!0,u=!1,i="";return e.translitMode>=2&&(a=!1),n.forEach((function(n,c){var s,f=t[c];if("marker-open-translit-mode"===f)s=e.translitMode,a=1!==s;else if("marker-close-translit-mode"===f)a=function(n){return 1===n||!(n>=2)}(e.translitMode);else if("marker-translit-scheme"===f)a?(i="",u=!0):o.push(n.char);else if("pause"===f)u?u=!1:o.push(n.char);else if("unknown"===f)a&&3===e.translitMode&&u?i+=n.char:o.push(n.char);else if("skip"===f)o.push("");else if(a)if(3===e.translitMode)if(u)i+=n.char;else{var l=r[i];l?o.push(l[n.aksharaIndex].char[f]):o.push(n.char)}else o.push(r[n.aksharaIndex].char[f]);else o.push(n.char)})),o},v=r(0),y=function(n,t){return 3===t.translitMode?"brahmic":n.about.type},m=function(){for(var n=arguments.length,t=new Array(n),r=0;r<n;r++)t[r]=arguments[r];return function(n){var r=t[0],e=t[1],o=t[2],a=t[3],u=t[4],i=Object(v.vTokenize)(n,a,d(e,u)),c=y(r,u),s=h(i,0,c),f=s.processedTokens,l=s.tokensType;return p(f,l,o,u).join("")}},b={translitMode:0},w=function(n,t){return function(r,e,o){return function(a){if(r===e)return a;var u=function(n){return Object.assign({},b,n)}(o);return"Multi"===e?(function(n){if("Itrn"!==n)throw new Error("Multi scheme translit requires from scheme to be `Itrn`.")}(r),function(){for(var n=arguments.length,t=new Array(n),r=0;r<n;r++)t[r]=arguments[r];var e=t[0],o=t[1],a=t[2],u=t[3],i=a(e),f=[],l=c(i),d=l.fromSchemeTree,h=l.maxTokenLength;o().forEach((function(n){f.push(a(n.code))}));var p={};return f.forEach((function(n){p[n.about.code]=s(n)})),u.translitMode=3,function(n){return m(f,d,p,h,u)(n)}}(r,t,n,u)(a)):function(){for(var n=arguments.length,t=new Array(n),r=0;r<n;r++)t[r]=arguments[r];var e=t[0],o=t[1],a=t[2],u=t[3],i=a(e),f=a(o),l=c(i),d=l.fromSchemeTree,h=l.maxTokenLength,p=s(f);return function(n){return m(f,d,p,h,u)(n)}}(r,e,n,u)(a)}}};function g(n,t){return function(n){if(Array.isArray(n))return n}(n)||function(n,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(n)))return;var r=[],e=!0,o=!1,a=void 0;try{for(var u,i=n[Symbol.iterator]();!(e=(u=i.next()).done)&&(r.push(u.value),!t||r.length!==t);e=!0);}catch(n){o=!0,a=n}finally{try{e||null==i.return||i.return()}finally{if(o)throw a}}return r}(n,t)||function(n,t){if(!n)return;if("string"==typeof n)return k(n,t);var r=Object.prototype.toString.call(n).slice(8,-1);"Object"===r&&n.constructor&&(r=n.constructor.name);if("Map"===r||"Set"===r)return Array.from(n);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return k(n,t)}(n,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function k(n,t){(null==t||t>n.length)&&(t=n.length);for(var r=0,e=new Array(t);r<t;r++)e[r]=n[r];return e}var x=function(n){return function(t){if(!t||"string"!=typeof t)throw new Error("Function requires a string to find its scheme");var r,e,o,a=t.slice(0,10),u=[];return a.split("").forEach((function(t){var r=function(n){return function(t){return n.find((function(n){var r=g(n.about.unicodeBlock.split("-").map((function(n){return parseInt(n,16)})),2),e=r[0],o=r[1],a=t.charCodeAt(0);return a>=e&&a<=o}))}}(n)(t);r&&u.push(r.about.code)})),r={},e=0,o=null,u.forEach((function(n){void 0===r[n]?r[n]=1:r[n]+=1,r[n]>e&&(e=r[n],o=n)})),o}},M=function(n){return function(t){var r=n.find((function(n){return n.about.code===t}));if(r)return r;throw new Error("No Scheme found with the given schemeCode: '".concat(t,"'"))}},j=function(n){return function(){var t=[];return n.forEach((function(n){t.push({code:n.about.code,name:n.about.name})})),t}},T=function(n){return{find:x(n),get:M(n),list:j(n)}},O=function(n){if(n){if(Array.isArray(n)){if(n.length<2)throw new Error("Atleast two vTranslit schemes are required to init vTranslit.");return n.map((function(n){if(!(n.about&&n.data&&n.about.code&&n.about.name&&n.about.type&&n.about.unicodeBlock))throw new Error("One or more of the provided vTranslit scheme are invalid.")})),n}throw new Error("vTranslit schemes are expected to be in array format.")}throw new Error("Function vTranslit should be initiated with a list vTranslit schemes.")},E=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=O(n),r=T(t),e=r.find,o=r.get,a=r.list;return{find:e,init:w(o,a),list:a}}}])}));